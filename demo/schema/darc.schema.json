{
  "title": "DARC Data Submission JSON Schema",
  "definitions": {
    "Proxy": {
      "title": "Proxy",
      "description": "Proxy type.",
      "enum": [
        "null",
        "tor",
        "i2p",
        "zeronet",
        "freenet"
      ],
      "type": "string"
    },
    "Metadata": {
      "title": "metadata",
      "description": "Metadata of URL.",
      "type": "object",
      "properties": {
        "url": {
          "title": "Url",
          "description": "original URL - <scheme>://<netloc>/<path>;<params>?<query>#<fragment>",
          "minLength": 1,
          "maxLength": 65536,
          "format": "uri",
          "type": "string"
        },
        "proxy": {
          "$ref": "#/definitions/Proxy"
        },
        "host": {
          "title": "Host",
          "description": "hostname / netloc, c.f. ``urllib.parse.urlparse``",
          "type": "string"
        },
        "base": {
          "title": "Base",
          "description": "base folder, relative path (to data root path ``PATH_DATA``) in containter - <proxy>/<scheme>/<host>",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "sha256 of URL as name for saved files (timestamp is in ISO format) - JSON log as this one: <base>/<name>_<timestamp>.json; - HTML from requests: <base>/<name>_<timestamp>_raw.html; - HTML from selenium: <base>/<name>_<timestamp>.html; - generic data files: <base>/<name>_<timestamp>.dat",
          "type": "string"
        }
      },
      "required": [
        "url",
        "proxy",
        "host",
        "base",
        "name"
      ]
    },
    "RobotsDocument": {
      "title": "RobotsDocument",
      "description": "``robots.txt`` document data.",
      "type": "object",
      "properties": {
        "path": {
          "title": "Path",
          "description": "path of the file, relative path (to data root path ``PATH_DATA``) in container - <proxy>/<scheme>/<host>/robots.txt",
          "type": "string"
        },
        "data": {
          "title": "Data",
          "description": "content of the file (**base64** encoded)",
          "type": "string"
        }
      },
      "required": [
        "path",
        "data"
      ]
    },
    "SitemapDocument": {
      "title": "SitemapDocument",
      "description": "Sitemaps document data.",
      "type": "object",
      "properties": {
        "path": {
          "title": "Path",
          "description": "path of the file, relative path (to data root path ``PATH_DATA``) in container - <proxy>/<scheme>/<host>/sitemap_<name>.xml",
          "type": "string"
        },
        "data": {
          "title": "Data",
          "description": "content of the file (**base64** encoded)",
          "type": "string"
        }
      },
      "required": [
        "path",
        "data"
      ]
    },
    "HostsDocument": {
      "title": "HostsDocument",
      "description": "``hosts.txt`` document data.",
      "type": "object",
      "properties": {
        "path": {
          "title": "Path",
          "description": "path of the file, relative path (to data root path ``PATH_DATA``) in container - <proxy>/<scheme>/<host>/hosts.txt",
          "type": "string"
        },
        "data": {
          "title": "Data",
          "description": "content of the file (**base64** encoded)",
          "type": "string"
        }
      },
      "required": [
        "path",
        "data"
      ]
    },
    "NewHostModel": {
      "title": "new_host",
      "description": "Data submission from :func:`darc.submit.submit_new_host`.",
      "type": "object",
      "properties": {
        "$PARTIAL$": {
          "title": "$Partial$",
          "description": "partial flag - true / false",
          "type": "boolean"
        },
        "$RELOAD$": {
          "title": "$Reload$",
          "description": "reload flag - true / false",
          "type": "boolean"
        },
        "[metadata]": {
          "title": "[Metadata]",
          "description": "metadata of URL",
          "allOf": [
            {
              "$ref": "#/definitions/Metadata"
            }
          ]
        },
        "Timestamp": {
          "title": "Timestamp",
          "description": "requested timestamp in ISO format as in name of saved file",
          "type": "string",
          "format": "date-time"
        },
        "URL": {
          "title": "Url",
          "description": "original URL",
          "minLength": 1,
          "maxLength": 65536,
          "format": "uri",
          "type": "string"
        },
        "Robots": {
          "title": "Robots",
          "description": "robots.txt from the host (if not exists, then ``null``)",
          "allOf": [
            {
              "$ref": "#/definitions/RobotsDocument"
            }
          ]
        },
        "Sitemaps": {
          "title": "Sitemaps",
          "description": "sitemaps from the host (if none, then ``null``)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SitemapDocument"
          }
        },
        "Hosts": {
          "title": "Hosts",
          "description": "hosts.txt from the host (if proxy type is ``i2p``; if not exists, then ``null``)",
          "allOf": [
            {
              "$ref": "#/definitions/HostsDocument"
            }
          ]
        }
      },
      "required": [
        "$PARTIAL$",
        "$RELOAD$",
        "[metadata]",
        "Timestamp",
        "URL"
      ]
    },
    "RequestsDocument": {
      "title": "RequestsDocument",
      "description": ":mod:`requests` document data.",
      "type": "object",
      "properties": {
        "path": {
          "title": "Path",
          "description": "path of the file, relative path (to data root path ``PATH_DATA``) in container - <proxy>/<scheme>/<host>/<name>_<timestamp>_raw.html; or if the document is of generic content type, i.e. not HTML - <proxy>/<scheme>/<host>/<name>_<timestamp>.dat",
          "type": "string"
        },
        "data": {
          "title": "Data",
          "description": "content of the file (**base64** encoded)",
          "type": "string"
        }
      },
      "required": [
        "path",
        "data"
      ]
    },
    "HistoryModel": {
      "title": "HistoryModel",
      "description": ":mod:`requests` history data.",
      "type": "object",
      "properties": {
        "URL": {
          "title": "Url",
          "description": "original URL",
          "minLength": 1,
          "maxLength": 65536,
          "format": "uri",
          "type": "string"
        },
        "Method": {
          "title": "Method",
          "description": "request method",
          "type": "string"
        },
        "Status-Code": {
          "title": "Status-Code",
          "description": "response status code",
          "exclusiveMinimum": 0,
          "type": "integer"
        },
        "Reason": {
          "title": "Reason",
          "description": "response reason",
          "type": "string"
        },
        "Cookies": {
          "title": "Cookies",
          "description": "response cookies (if any)",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "Session": {
          "title": "Session",
          "description": "session cookies (if any)",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "Request": {
          "title": "Request",
          "description": "request headers (if any)",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "Response": {
          "title": "Response",
          "description": "response headers (if any)",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "Document": {
          "title": "Document",
          "description": "content of the file (**base64** encoded)",
          "type": "string"
        }
      },
      "required": [
        "URL",
        "Method",
        "Status-Code",
        "Reason",
        "Cookies",
        "Session",
        "Request",
        "Response",
        "Document"
      ]
    },
    "RequestsModel": {
      "title": "requests",
      "description": "Data submission from :func:`darc.submit.submit_requests`.",
      "type": "object",
      "properties": {
        "$PARTIAL$": {
          "title": "$Partial$",
          "description": "partial flag - true / false",
          "type": "boolean"
        },
        "[metadata]": {
          "title": "[Metadata]",
          "description": "metadata of URL",
          "allOf": [
            {
              "$ref": "#/definitions/Metadata"
            }
          ]
        },
        "Timestamp": {
          "title": "Timestamp",
          "description": "requested timestamp in ISO format as in name of saved file",
          "type": "string",
          "format": "date-time"
        },
        "URL": {
          "title": "Url",
          "description": "original URL",
          "minLength": 1,
          "maxLength": 65536,
          "format": "uri",
          "type": "string"
        },
        "Method": {
          "title": "Method",
          "description": "request method",
          "type": "string"
        },
        "Status-Code": {
          "title": "Status-Code",
          "description": "response status code",
          "exclusiveMinimum": 0,
          "type": "integer"
        },
        "Reason": {
          "title": "Reason",
          "description": "response reason",
          "type": "string"
        },
        "Cookies": {
          "title": "Cookies",
          "description": "response cookies (if any)",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "Session": {
          "title": "Session",
          "description": "session cookies (if any)",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "Request": {
          "title": "Request",
          "description": "request headers (if any)",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "Response": {
          "title": "Response",
          "description": "response headers (if any)",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "Content-Type": {
          "title": "Content-Type",
          "description": "content type",
          "pattern": "[a-zA-Z0-9.-]+/[a-zA-Z0-9.-]+",
          "type": "string"
        },
        "Document": {
          "title": "Document",
          "description": "requested file (if not exists, then ``null``)",
          "allOf": [
            {
              "$ref": "#/definitions/RequestsDocument"
            }
          ]
        },
        "History": {
          "title": "History",
          "description": "redirection history (if any)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/HistoryModel"
          }
        }
      },
      "required": [
        "$PARTIAL$",
        "[metadata]",
        "Timestamp",
        "URL",
        "Method",
        "Status-Code",
        "Reason",
        "Cookies",
        "Session",
        "Request",
        "Response",
        "Content-Type",
        "History"
      ]
    },
    "SeleniumDocument": {
      "title": "SeleniumDocument",
      "description": ":mod:`selenium` document data.",
      "type": "object",
      "properties": {
        "path": {
          "title": "Path",
          "description": "path of the file, relative path (to data root path ``PATH_DATA``) in container - <proxy>/<scheme>/<host>/<name>_<timestamp>.html",
          "type": "string"
        },
        "data": {
          "title": "Data",
          "description": "content of the file (**base64** encoded)",
          "type": "string"
        }
      },
      "required": [
        "path",
        "data"
      ]
    },
    "ScreenshotDocument": {
      "title": "ScreenshotDocument",
      "description": "Screenshot document data.",
      "type": "object",
      "properties": {
        "path": {
          "title": "Path",
          "description": "path of the file, relative path (to data root path ``PATH_DATA``) in container - <proxy>/<scheme>/<host>/<name>_<timestamp>.png",
          "type": "string"
        },
        "data": {
          "title": "Data",
          "description": "content of the file (**base64** encoded)",
          "type": "string"
        }
      },
      "required": [
        "path",
        "data"
      ]
    },
    "SeleniumModel": {
      "title": "selenium",
      "description": "Data submission from :func:`darc.submit.submit_requests`.",
      "type": "object",
      "properties": {
        "$PARTIAL$": {
          "title": "$Partial$",
          "description": "partial flag - true / false",
          "type": "boolean"
        },
        "[metadata]": {
          "title": "[Metadata]",
          "description": "metadata of URL",
          "allOf": [
            {
              "$ref": "#/definitions/Metadata"
            }
          ]
        },
        "Timestamp": {
          "title": "Timestamp",
          "description": "requested timestamp in ISO format as in name of saved file",
          "type": "string",
          "format": "date-time"
        },
        "URL": {
          "title": "Url",
          "description": "original URL",
          "minLength": 1,
          "maxLength": 65536,
          "format": "uri",
          "type": "string"
        },
        "Document": {
          "title": "Document",
          "description": "rendered HTML document (if not exists, then ``null``)",
          "allOf": [
            {
              "$ref": "#/definitions/SeleniumDocument"
            }
          ]
        },
        "Screenshot": {
          "title": "Screenshot",
          "description": "web page screenshot (if not exists, then ``null``)",
          "allOf": [
            {
              "$ref": "#/definitions/ScreenshotDocument"
            }
          ]
        }
      },
      "required": [
        "$PARTIAL$",
        "[metadata]",
        "Timestamp",
        "URL"
      ]
    }
  }
}